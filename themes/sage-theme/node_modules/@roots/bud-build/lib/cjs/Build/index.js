"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Build = void 0;
const bud_framework_1 = require("@roots/bud-framework");
const bud_support_1 = require("@roots/bud-support");
const index_1 = require("../Rule/index");
const config = __importStar(require("./config/index"));
const items_1 = __importDefault(require("./items"));
const loaders_1 = __importDefault(require("./loaders"));
const rules = __importStar(require("./rules"));
const { isNull, isUndefined } = bud_support_1.lodash;
const { ensureFile, writeFile } = bud_support_1.fs;
/**
 * Webpack configuration builder class
 *
 * @public
 */
class Build extends bud_framework_1.Service {
    /**
     * Service booted event
     *
     * @public
     * @decorator `@bind`
     */
    async registered() {
        this.app.hooks.action('event.build.after', this.writeFinalConfig);
    }
    /**
     * Make webpack configuration
     *
     * @public
     * @decorator `@bind`
     */
    async make() {
        await this.app.hooks.fire('event.build.before');
        const build = await this.app.hooks.filterAsync('build');
        if (!build) {
            throw new Error('Configuration could not be processed');
        }
        this.config = Object.entries(build).reduce((all, [key, value]) => {
            if (isUndefined(value) || isNull(value)) {
                this.log(`warn`, {
                    message: `build.make: excluding ${key}`,
                    suffix: `value is undefined`,
                });
                return all;
            }
            this.app.dump(value, {
                prefix: `${bud_support_1.chalk.bgBlue(this.app.name)} config.${key}`,
                maxDepth: 2,
            });
            return { ...all, [key]: value };
        }, {});
        await this.app.hooks.fire('event.build.after');
        return this.config;
    }
    /**
     * Service register event
     *
     * @public
     * @decorator `@bind`
     */
    async register() {
        const reducer = (a, [k, v]) => ({
            ...a,
            [k]: v(this.app),
        });
        Object.assign(this, {
            loaders: this.app
                .container(loaders_1.default)
                .getEntries()
                .reduce(reducer, this.loaders),
            rules: this.app
                .container(rules)
                .getEntries()
                .reduce(reducer, this.rules),
            items: this.app
                .container(items_1.default)
                .getEntries()
                .reduce(reducer, this.items),
        });
        await config.builder.build(this.app);
    }
    /**
     * Set a rule
     *
     * @param name - rule key
     * @param constructorProperties - rule constructor properties
     * @returns the rule
     *
     * @public
     * @decorator `@bind`
     */
    setRule(name, constructorProperties) {
        Object.assign(this.rules, {
            [name]: this.makeRule(constructorProperties),
        });
        return this.rules[name];
    }
    /**
     * Make a rule
     *
     * @param constructorProperties - rule constructor properties
     * @returns the rule
     *
     * @public
     * @decorator `@bind`
     */
    makeRule(constructorProperties) {
        return new index_1.Rule(this.app, constructorProperties);
    }
    /**
     * Write final configuration to storage directory
     *
     * @public
     * @decorator `@bind`
     */
    async writeFinalConfig() {
        try {
            const filePath = this.app.path('storage', this.config.name, 'webpack.config.js');
            await ensureFile(filePath);
            await writeFile(filePath, `module.exports = ${this.app.json.stringify(this.config, null, 2)}`);
        }
        catch (error) {
            this.log('error', `failed to write webpack.config.json`);
            this.log(`error`, error);
        }
    }
}
__decorate([
    bud_support_1.bind
], Build.prototype, "registered", null);
__decorate([
    bud_support_1.bind
], Build.prototype, "make", null);
__decorate([
    bud_support_1.bind
], Build.prototype, "register", null);
__decorate([
    bud_support_1.bind
], Build.prototype, "setRule", null);
__decorate([
    bud_support_1.bind
], Build.prototype, "makeRule", null);
__decorate([
    bud_support_1.bind
], Build.prototype, "writeFinalConfig", null);
exports.Build = Build;
