"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.when = exports.make = exports.api = exports.options = exports.name = void 0;
const themeJson = __importStar(require("./api/themeJson"));
const useTailwindColors = __importStar(require("./api/useTailwindColors"));
const plugin_1 = require("./plugin");
/**
 * Extension name
 *
 * @public
 */
exports.name = 'wp-theme-json';
/**
 * Extension options
 *
 * @public
 */
exports.options = {
    color: {
        custom: false,
        customGradient: false,
    },
    custom: {
        spacing: {},
        typography: { 'font-size': {}, 'line-height': {} },
    },
    spacing: {
        padding: true,
        units: ['px', '%', 'em', 'rem', 'vw', 'vh'],
    },
    typography: {
        customFontSize: false,
        dropCap: false,
    },
};
/**
 * Extension api
 *
 * @public
 */
exports.api = {
    themeJson: themeJson.method,
    useTailwindColors: useTailwindColors.method,
};
/**
 * Extension make
 *
 * @public
 */
const make = (options, app) => new plugin_1.ThemeJsonWebpackPlugin({
    path: app.path('project', 'theme.json'),
    json: app.json.stringify({
        $schema: 'https://schemas.wp.org/trunk/theme.json',
        version: 2,
        settings: options.all(),
    }, null, 2),
});
exports.make = make;
exports.when = false;
