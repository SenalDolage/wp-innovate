"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hooks = void 0;
const bud_hooks_1 = require("@roots/bud-hooks");
const bud_support_1 = require("@roots/bud-support");
/**
 * Hooks service
 *
 * @public
 */
class Hooks extends bud_hooks_1.Hooks {
    constructor() {
        super(...arguments);
        /**
         * Service identifier
         *
         * @internal
         */
        this.ident = 'hooks';
    }
    /**
     * Registr lifecycle hook
     *
     * @remarks
     * Register hooks for each disk key
     *
     * @internal
     */
    async bootstrap({ store }) {
        this.on(`location.project`, () => !store.isUndefined(`cli.flags.location.project`)
            ? store.get(`cli.flags.location.project`)
            : store.get(`location.project`));
        this.on(`location.src`, () => !store.isUndefined(`cli.flags.location.src`)
            ? store.get(`cli.flags.location.src`)
            : store.get(`location.src`));
        this.on(`location.dist`, () => !store.isUndefined(`cli.flags.location.dist`)
            ? store.get(`cli.flags.location.dist`)
            : store.get(`location.dist`));
        this.on(`location.modules`, () => !store.isUndefined(`cli.flags.location.modules`)
            ? store.get(`cli.flags.location.modules`)
            : store.get(`location.modules`));
        this.on(`location.storage`, () => !store.isUndefined(`cli.flags.location.storage`)
            ? store.get(`cli.flags.location.storage`)
            : store.get(`location.storage`));
    }
}
__decorate([
    bud_support_1.bind
], Hooks.prototype, "bootstrap", null);
exports.Hooks = Hooks;
