/// <reference types="node" />
/**
 * Indicator web component
 *
 * @public
 */
export declare class IndicatorComponent extends HTMLElement {
    /**
     * Has component rendered
     *
     * @public
     */
    rendered: boolean;
    /**
     * Component name
     *
     * @public
     */
    name: string;
    /**
     * Timer
     *
     * @public
     */
    hideTimeout: NodeJS.Timer;
    /**
     * hmr status payload
     */
    payload: any;
    /**
     * Get accessor: has errors
     *
     * @public
     */
    get hasErrors(): boolean;
    /**
     * Get accessor: has warnings
     *
     * @public
     */
    get hasWarnings(): boolean;
    /**
     * Compilation is ongoing
     *
     * @public
     */
    get isPending(): boolean;
    /**
     * Status indicator colors
     *
     * @public
     */
    colors: {
        success: number[];
        error: number[];
        warn: number[];
        pending: number[];
    };
    /**
     * Render status indicator
     *
     * @public
     */
    render(): void;
    /**
     * Show status indicator
     *
     * @public
     */
    show(): void;
    /**
     * Hide status indicator
     */
    hide(): void;
    /**
     * Status is pending
     *
     * @public
     */
    pending(): void;
    /**
     * Status is success
     *
     * @public
     */
    success(): void;
    /**
     * Status is error
     *
     * @public
     */
    error(): void;
    /**
     * Status is warning
     *
     * @public
     */
    warning(): void;
    /**
     * Update status
     *
     * @public
     */
    update(): void;
    static get observedAttributes(): string[];
    attributeChangedCallback(): void;
    connectedCallback(): void;
}
//# sourceMappingURL=indicator.component.d.ts.map